# generated by datamodel-codegen:
#   filename:  https://wswcwaterdataexchange.github.io/WaDE-API-Docs/swagger.json
#   timestamp: 2025-07-16T18:58:29+00:00

from __future__ import annotations

from dataclasses import dataclass, field
from enum import Enum
from typing import Any, Dict, List, Optional


@dataclass
class Conformance:
    conformsTo: List[str]


@dataclass
class Error:
    type: Optional[str] = None
    title: Optional[str] = None
    status: Optional[int] = None
    detail: Optional[str] = None
    errors: Optional[Dict[str, Any]] = None


BboxItem = List[float]


class Crs(Enum):
    http___www_opengis_net_def_crs_OGC_1_3_CRS84 = (
        'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
    )


@dataclass
class Spatial:
    bbox: Optional[List[BboxItem]] = None
    crs: Optional[Crs] = Crs.http___www_opengis_net_def_crs_OGC_1_3_CRS84


IntervalItem = List[str]


class Trs(Enum):
    http___www_opengis_net_def_uom_ISO_8601_0_Gregorian = (
        'http://www.opengis.net/def/uom/ISO-8601/0/Gregorian'
    )


@dataclass
class Temporal:
    interval: Optional[List[IntervalItem]] = None
    trs: Optional[Trs] = Trs.http___www_opengis_net_def_uom_ISO_8601_0_Gregorian


@dataclass
class Extent:
    spatial: Optional[Spatial] = None
    temporal: Optional[Temporal] = None


class Type(Enum):
    FeatureCollection = 'FeatureCollection'


class Type1(Enum):
    Feature = 'Feature'


class Type2(Enum):
    Point = 'Point'
    LineString = 'LineString'
    Polygon = 'Polygon'
    MultiPoint = 'MultiPoint'
    MultiLineString = 'MultiLineString'
    MultiPolygon = 'MultiPolygon'


@dataclass
class GeometryGeoJSON:
    type: Type2
    coordinates: List[float]


class Type3(Enum):
    GeometryCollection = 'GeometryCollection'


@dataclass
class GeometrycollectionGeoJSON:
    type: Type3
    geometries: List[GeometryGeoJSON]


@dataclass
class Link:
    href: Optional[str] = None
    rel: Optional[str] = None
    type: Optional[str] = None
    title: Optional[str] = None


@dataclass
class Collection:
    id: str
    links: List[Link]
    title: Optional[str] = None
    description: Optional[str] = None
    extent: Optional[Extent] = None
    itemType: Optional[str] = 'feature'
    crs: Optional[List[str]] = field(
        default_factory=lambda: ['http://www.opengis.net/def/crs/OGC/1.3/CRS84']
    )


@dataclass
class Collections:
    links: List[Link]
    collections: List[Collection]


@dataclass
class FeatureGeoJSON:
    type: Type1
    geometry: GeometryGeoJSON
    properties: Dict[str, Any]
    id: str
    links: Optional[List[Link]] = None


@dataclass
class LandingPage:
    links: List[Link]
    title: Optional[str] = None
    description: Optional[str] = None
    keywords: Optional[List[str]] = None
    error: Optional[Error] = None


@dataclass
class FeatureCollectionGeoJSON:
    type: Type
    features: List[FeatureGeoJSON]
    links: Optional[List[Link]] = None
