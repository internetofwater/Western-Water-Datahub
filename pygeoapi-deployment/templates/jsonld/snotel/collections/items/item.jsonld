{
  "@context": [
    {
      "schema": "https://schema.org/",
      "gsp": "http://www.opengis.net/ont/geosparql#",
      "type": "@type",
      "hyf": "https://www.opengis.net/def/schema/hy_features/hyf/"
    }
  ],
  "type": ["schema:Place", "hyf:HY_HydroLocation"],
  "@id": "{{ data['@id'] | safe }}",
  "schema:identifier": {{ data["id"] | safe }},
  "schema:name": "{{ data['name'] }}",
  {% if data["description"] %}
  "schema:description": {{ data["description"] }},
  {% endif %}
  "schema:elevation": {{ data["elevation"] | safe }},
  "schema:dateCreated": "{{ data['beginDate'] | safe }}",
  "schema:dateModified": "{{ data['endDate'] | safe }}",

  "hyf:HY_HydroLocationType": "{% if data['locationTypeName'] == 'Lake/Reservoir' %}HY_Reservoir{% elif data['locationTypeName'] == 'River/Stream' %}HY_River{% elif data['locationTypeName'] == 'Canal' %}HY_Canal{% else %}Unknown{% endif %}",
  "gsp:hasGeometry": {{ data["gsp:hasGeometry"] | to_json }}, 
  "schema:geo": {{ data["schema:geo"] | to_json }},
  "schema:subjectOf": [
    {% for element in data["stationElements"] %}
    {
      {% set duration = element["durationName"].removeprefix("DurationName.")%}
      "@type": "schema:Dataset",
      "schema:identifier": "{{ element["elementCode"] }}",
      "schema:duration": "{{ duration }}",
      "schema:unitCode": "{{ element["storedUnitCode"] }}",
      "schema:dateCreated": "{{ element['beginDate'] | safe }}",
      "schema:dateModified": "{{ element['endDate'] | safe }}",
      "schema:name": "Data for {{ duration }} {{ element['elementCode'] }} in units: {{ element['storedUnitCode'] }}",
      "schema:provider": {
        "@type": "schema:GovernmentOrganization",
        "schema:url": "https://wcc.sc.egov.usda.gov/awdbRestApi/",
        "name": "United States Department of Agriculture's (USDA) Natural Resources Conservation Service (NRCS)"
      },
      "schema:variableMeasured": {
        "@type": "schema:PropertyValue",
        "schema:description": "{{ duration }} {{ element['elementCode'] }} as {{ element['storedUnitCode'] }}",
        "schema:unitText": "{{ element['storedUnitCode'] }}"
      }
    }{% if not loop.last %},{% endif %}
    {% endfor %}
  ]
}
